{
  "settingsTitle": "CodePilot 设置",
  "languageLabel": "语言",
  "apiKeySectionTitle": "🤖 AI 模型设置",
  "aiModelSettingsTitle": "🤖 AI 模型设置",
  "geminiApiKeyLabel": "🌐 Gemini API 密钥",
  "saveGeminiApiKeyButton": "保存",
  "geminiApiKeyStatusSaved": "已保存",
  "geminiApiKeyStatusNotSaved": "未保存",
  "weatherApiKeyLabel": "🌤️ 天气 API 密钥",
  "newsApiKeyLabel": "📰 新闻 API",
  "stockApiKeyLabel": "📈 股票 API 密钥",
  "saveButton": "保存",
  "projectRootLabel": "项目根目录设置",
  "sourcePathLabel": "源代码路径设置",
  "addSourcePathButton": "添加文件/文件夹",
  "removeSourcePathButton": "删除路径",
  "autoUpdateLabel": "自动文件更新",
  "autoUpdateOn": "开启",
  "autoUpdateOff": "关闭",
  "saveSuccess": "保存成功。",
  "saveError": "保存时出错。",
  "chatTitle": "CodePilot 聊天",
  "askTitle": "CodePilot 问答",
  "sendButton": "发送",
  "clearButton": "清除",
  "cancelButton": "取消",
  "inputPlaceholder": "请输入消息...",
  "filePickerButton": "选择文件",
  "projectRootDescription": "设置 CodePilot 将识别为项目顶级路径的目录。此路径在引用文件路径时可用作参考点。",
  "sourcePathDescription": "这是 CodePilot 在生成 AI 响应时将引用的源代码路径列表。指定文件和文件夹的内容可以作为上下文提供给 AI。",
  "autoUpdateDescription": "设置是否基于 LLM 建议的代码自动更新文件。禁用时，更新前将显示确认消息。",
  "noProjectRootSet": "未设置项目根目录",
  "settingsSavedImmediately": "设置更改时立即保存。",
  "autoUpdateEnabled": "启用自动文件更新",
  "autoUpdateStatusEnabled": "当前：自动更新已启用",
  "autoUpdateStatusDisabled": "当前：自动更新已禁用",
  "geminiApiDescription": "设置 Gemini API 密钥以使用 CodePilot 的 AI 功能。",
  "geminiApiRegistrationMethod": "注册方法：在 Google AI Studio API 密钥页面创建新的 API 密钥。",
  "geminiApiFunctionDescription": "启用 AI 代码生成和分析功能。",
  "externalApiKeysTitle": "外部 API 密钥设置",
  "externalApiKeysDescription": "设置外部 API 密钥以使用实时信息功能。从各服务网站获取 API 密钥并在此处输入。",
  "weatherApiDescription": "提供韩国的准确天气信息。",
  "weatherApiRegistrationMethod": "注册方法：在韩国气象厅 API 中心注册并获取 API 密钥。",
  "newsApiDescription": "提供韩国的最新新闻信息。",
  "newsApiRegistrationMethod": "注册方法：在 Naver 开发者中心注册应用程序并获取客户端 ID 和客户端密钥。",
  "stockApiDescription": "提供实时股票信息。",
  "stockApiRegistrationMethod": "注册方法：从 Alpha Vantage 获取免费 API 密钥。",
  "noPathsSpecified": "未指定路径",
  "pathSelectionDialog": "正在打开文件/文件夹选择对话框...",
  "projectRootSelectionDialog": "正在打开项目根目录选择对话框...",
  "clearingProjectRoot": "正在清除项目根目录...",
  "settingsLoading": "正在加载设置...",
  "autoUpdateLoading": "正在加载自动更新设置...",
  "projectRootLoading": "正在加载项目根目录设置...",
  "apiKeysLoading": "正在加载 API 密钥...",
  "sourcePathsLoaded": "源代码路径加载完成。",
  "projectRootLoaded": "项目根目录加载完成。",
  "sourcePathsUpdated": "源代码路径更新完成。",
  "projectRootUpdated": "项目根目录更新完成：",
  "projectRootCleared": "项目根目录已清除。",
  "autoUpdateChanged": "自动更新",
  "autoUpdateEnabledStatus": "已启用",
  "autoUpdateDisabledStatus": "已禁用",
  "pathAddError": "错误（路径添加）：",
  "pathRemoveError": "错误（路径删除）：",
  "projectRootError": "错误（项目根目录设置）：",
  "weatherApiKeySet": "天气 API 密钥已设置。",
  "weatherApiKeyNotSet": "天气 API 密钥未设置。",
  "newsApiKeySet": "Naver API 客户端 ID 已设置。",
  "newsApiKeyNotSet": "Naver API 客户端 ID 未设置。",
  "newsApiSecretSet": "Naver API 客户端密钥已设置。",
  "newsApiSecretNotSet": "Naver API 客户端密钥未设置。",
  "stockApiKeySet": "股票 API 密钥已设置。",
  "stockApiKeyNotSet": "股票 API 密钥未设置。",
  "geminiApiKeySet": "Gemini API 密钥已设置。",
  "geminiApiKeyNotSet": "Gemini API 密钥未设置。",
  "weatherApiKeySaved": "天气 API 密钥保存成功。",
  "weatherApiKeyError": "天气 API 密钥保存失败：",
  "newsApiKeySaved": "Naver API 客户端 ID 保存成功。",
  "newsApiKeyError": "Naver API 客户端 ID 保存失败：",
  "newsApiSecretSaved": "Naver API 客户端密钥保存成功。",
  "newsApiSecretError": "Naver API 客户端密钥保存失败：",
  "stockApiKeySaved": "股票 API 密钥保存成功。",
  "stockApiKeyError": "股票 API 密钥保存失败：",
  "geminiApiKeySaved": "Gemini API 密钥保存成功。",
  "geminiApiKeyError": "Gemini API 密钥保存失败：",
  "ollamaApiLabel": "🏠 Ollama Gemma3:27b (本地)",
  "ollamaApiDescription": "使用本地网络中安装的 Ollama Gemma3:27b 模型来启用 AI 代码生成和分析功能。",
  "ollamaApiSetupMethod": "设置方法：输入本地网络中运行的 Ollama 服务器的 HTTP API 地址。（例如：http://192.168.1.100:11434）",
  "saveOllamaApiUrlButton": "保存",
  "ollamaApiUrlSaving": "正在保存 Ollama API URL...",
  "ollamaApiUrlSaved": "Ollama API URL 保存成功。",
  "ollamaApiUrlError": "Ollama API URL 保存失败：",
  "ollamaApiUrlSet": "Ollama API URL 已设置。",
  "ollamaApiUrlNotSet": "Ollama API URL 未设置。",
  "pleaseEnterOllamaApiUrl": "请输入 Ollama API URL。",
  "invalidUrlFormat": "请输入正确的 URL 格式。（例如：http://localhost:11434）",
  "banyaLicenseTitle": "🔑 Banya 许可证设置",
  "banyaLicenseDescription": "输入并验证 Banya 许可证序列号以使用 CodePilot 的高级功能。",
  "banyaLicenseLabel": "许可证序列号",
  "banyaLicenseSectionDescription": "输入 Banya 许可证序列号以激活产品。",
  "saveBanyaLicenseButton": "保存许可证",
  "verifyBanyaLicenseButton": "验证许可证",
  "banyaLicenseSaving": "正在保存 Banya 许可证...",
  "banyaLicenseSaved": "Banya 许可证保存成功。",
  "banyaLicenseError": "Banya 许可证保存失败：",
  "banyaLicenseVerifying": "正在验证 Banya 许可证...",
  "banyaLicenseVerified": "Banya 许可证有效。",
  "banyaLicenseVerificationFailed": "Banya 许可证验证失败：",
  "banyaLicenseSet": "Banya 许可证已设置。",
  "banyaLicenseNotSet": "Banya 许可证未设置。",
  "pleaseEnterBanyaLicense": "请输入包含连字符的16位序列号",
  "licenseNotSetMessage": "许可证未设置。请在设置中输入并验证Banya许可证。",
  "deleteBanyaLicenseButton": "删除许可证",
  "banyaLicenseDeleting": "正在删除 Banya 许可证...",
  "banyaLicenseDeleted": "Banya 许可证已删除。",
  "banyaLicenseDeleteError": "Banya 许可证删除失败：",
  "verifyButton": "验证",
  "aiModelSelectLabel": "AI 模型选择",
  "geminiOption": "Gemini 2.5 Pro Flash",
  "ollamaOption": "Gemma3:27b (Ollama)",
  "aiModelSaved": "AI 模型保存成功。",
  "aiModelSaveError": "AI 模型保存失败：",
  "languageChanged": "语言已更改为",
  "languageChangedTo": "。",
  "languageSaveError": "语言保存失败：",
  "pleaseEnterApiKey": "请输入 API 密钥。",
  "pathRemovalRequest": "正在请求删除...",
  "projectRootRemovalRequest": "正在清除项目根目录...",
  "settingChangeInProgress": "正在更改设置...",
  "settingChangeEnabled": "（已启用）",
  "settingChangeDisabled": "（已禁用）",
  "current": "当前：",
  "licensePageTitle": "许可证和版权",
  "licenseSectionTitle": "许可证",
  "licenseSectionDescription": "本项目根据 Apache License 2.0 进行分发。",
  "licenseText": "Copyright [2025] [tony@banya.ai]\n\n根据 Apache 许可证 2.0 版（'许可证'）获得许可；\n除非遵守许可证，否则您不得使用此文件。\n您可以在以下网址获得许可证副本：\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n除非适用法律要求或书面同意，否则根据许可证分发的软件是按'原样'分发的，\n不附带任何明示或暗示的担保或条件。\n有关许可证下的权限和限制的具体语言，请参见许可证。",
  "githubSectionTitle": "GitHub 仓库",
  "githubSectionDescription": "查看 CodePilot 的源代码和最新信息。",
  "githubViewLink": "🌐 在 GitHub 上查看",
  "githubIssuesLink": "🐛 问题与反馈",
  "githubStarLink": "⭐ 点赞与支持"
} 